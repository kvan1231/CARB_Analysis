import rate_calc

# This example must be run in the directory containing all of the *dc.dat files
# generated by calc_duty_cycle.py, if it isn't you'll encounter value errors
# where the code tries to match the number of dc files to the number of
# observable LMXBs set internally in the code.

# Initialize the code
rt = rate_calc.rate_table()

# Generate a table of data from the observed ratio files grabbed during
# initialization that includes:
#     mass
#     dm
#     Period
#     dp
#     detectable time
#     total obs time
#     obs / detect
#     ind obs time
rt.table_gen()

# You can save the outputted table using the function
#      rt.save_init_table()
# to avoid running the above section of code multiple times and instead
# load the table using
#      rt.load_init_table()

# Now we will generate the rates in tabular form that includes:
#     Mass values
#     Mass bin
#     Period values
#     Period bin
#     Optimistic rate
#     Pessimistic rate
#     Individual values
rt.calc_rate_table()

# You can save the outputted rate table using the function
#      rt.save_rate_table_range()
# and again loading in a table is done using a similar function
#      rt.load_rate_table_range()

# Once all of the rates are calculated in a large table, we can split them
# into individual systems with
rt.gen_rate_short()

# This code will generate one file per observed LMXB which will be used to
# generate a summary txt file afterwards using
rt.gen_rate_summary()
